lecture 16-Working with Data Using Pandas


Creating a DataFrame from a Dictionary

import pandas as pd
# Creating a DataFrame from a dictionary

data={
'Name' :['Alice', 'Bob', 'Charlie'],
'Age' :[25, 30, 35],
'City' :['New York','Los Angeles', 'Chicago']
}
df = pd.DataFrame(data)
print(df)



Creating a DataFrame from a List of Dictionaries

data=[
{'Name':'Alice','Age':25,'City':'New York'},
{'Name':'Bob','Age':30,'City':'Los Angeles'},
{'Name':'charlie','Age':35,'City':'Chicago'}
]
df=pd.dataFrame(data)
print(df)



Creating a DataFrame from a CSV File

#Assuming 'data.csv' is a csv file in the current directory

df=pd.read_csv('dataset.csv')
print(df)




Viewing Data

#Displaying the first few rows

print(df.head())

#Displaying the last few rows

print(df.tail())

#Getting information about the dataFrame

print(df.info())

# descriptive statistics

print(df.describe())




Selecting Columns

# Selecting a single column

print(df['Name'])

# Selecting multiple columns

print (df['Name','City'])




Filtering Rows

# Filtering rows based on a condition

print(df[df['Age']>30])



Adding new Columns

df['Salary']=[50000,60000,70000,80000,90000]
print(df)

Modifying Existing Columns

df['Age']=df['Age']+1
print(df)

Dropping Columns and Rows

# Dropping a column

df=df.drop(columns=['Salary'])
print(df)

# Dropping a row

df=df.drop((index=1)
print(df)

Grouping Data

#Grouping data by  a column

grouped=df.groupby('city')
print(grouped['Age'].mean())


Aggregating Data

aggregated=df.groupby('city').agg({'Age':['mean','min','max]})
print(aggregated)



Merging DataFrames

df1=pd.DataFrame({'ID':[1,2,3],'Name' :['Alice','Bob','Charlie']})
df2=pd.DataFrame({'ID':[1,2,4],'Salary' :[50000,60000,70000]})

merged_df=pd.merge(df1,df2,on='ID',how='outer')
print(merged_df)



Joining DataFrames

df1=pd.DataFrame({'Name' :['Alice','Bob'],'Age':[25,30]},index=[0,1])
df2=pd.DataFrame({'City':['New York,'Los Angeles']},index=[0,2])

#joing dataframes on their index
joined_df=df1.join(df2,how='left')
print(joined_df)











